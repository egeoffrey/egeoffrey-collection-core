branch: development
container_config:
  environment:
  - EGEOFFREY_LOGGING_LOCAL=0
  ports:
  - 80:80
  volumes:
  - ./data/egeoffrey/logs:/egeoffrey/logs
  - ./data/egeoffrey/config:/egeoffrey/config
description: An All-In-One collection of the core eGeoffrey packages
dockerhub: egeoffrey/egeoffrey-collection-core
github: egeoffrey/egeoffrey-collection-core
icon: cube
manifest_schema: 2
modules:
- controller/logger:
    description: Takes care of collecting the logs from all the local and remote modules,
      storing them in the database and printing them out
    module_configuration:
    - description: Enable logging into the database
      format: checkbox
      name: database_enable
      required: true
    - description: Number of days to keep old logs in the database
      format: int
      name: database_retention
      placeholder: 6
      required: true
    - description: Enable logging to file (in the /logs directory)
      format: checkbox
      name: file_enable
      required: true
    - description: Rotate the log file when reaching this size (in megabytes)
      format: int
      name: file_rotate_size
      placeholder: 5
      required: true
    - description: Number of files to keep when rotating the logs
      format: int
      name: file_rotate_count
      placeholder: 5
      required: true
- controller/db:
    description: Connects to the database and runs queries on behalf of other modules
    module_configuration:
    - description: The underlying database to use
      format: redis|mongodb
      name: type
      required: true
    - description: The IP/hostname the Redis database is listening to
      format: string
      name: hostname
      placeholder: egeoffrey-database
      required: true
    - description: The port the Redis database is listening to
      format: int
      name: port
      placeholder: 6379
      required: true
    - description: The database number to use for storing the information
      format: string
      name: database
      placeholder: 1
      required: true
    - description: The username for connecting to the database
      format: string
      name: username
      placeholder: root
    - description: The password for connecting to the database
      format: string
      name: password
      placeholder: password
- controller/config:
    description: Stores configuration files on behalf of all the modules and makes
      them available
- controller/alerter:
    description: Keep running the configured rules which would trigger notifications
    module_configuration:
    - description: Number of days to keep old logs in the database
      format: int
      name: retention
      placeholder: 6
      required: true
    - description: Prevent the same rule to run again within this timeframe in seconds
        to avoid loops
      format: int
      name: loop_safeguard
      placeholder: 3
      required: true
- controller/chatbot:
    description: Interactive chatbot service
    module_configuration:
    - description: Chatbot's basic vocabulary
      format: dict
      name: vocabulary
      required: true
- controller/hub:
    description: Hub for collecting new measures from sensors
    module_configuration:
    - description: Aggregation policies that can be associated to sensors to e.g.
        automatically calculate average, minimum and maximum per hour/day
      format: dict
      name: calculate
      required: true
    - description: Retention policies that can be associated to sensors to e.g. automatically
        purge old values from the database
      format: dict
      name: retain
      required: true
    - description: Set of available post processing commands that can be associated
        to sensors to e.g. automatically post-process a new value once collected
      format: dict
      name: post_processors
      required: true
    - description: if requested to save the same sensor's value of the latest in a
        very short time, ignore it (tolerance in seconds)
      format: int
      name: duplicates_tolerance
      required: false
    - description: if pinning (retaining) the last value of each sensor on the message
        bus
      format: checkbox
      name: pin_last_values
      required: false
- gui/webserver:
    description: Runs the webserver serving eGeoffrey's web interface
- interaction/slack:
    description: Connect to a slack channel as a bot and interact with the user
    module_configuration:
    - description: The Slack legacy token the chatbot will use to connect to Slack
      format: string
      name: bot_token
      required: true
    - description: The name of the bot as it will show up on Slack
      format: string
      name: bot_name
      placeholder: housebot
      required: true
    - description: The name of the channel the chatbot has to join
      format: string
      name: channel
      placeholder: channel_name
      required: true
- interaction/telegram_messenger:
    description: Connect to a Telegram group as a bot and interact with the user
    module_configuration:
    - description: The token of the Telegram bot you have created (https://core.telegram.org/bots#3-how-do-i-create-a-bot)
      format: string
      name: bot_token
      required: true
    - description: The command to use as a prefix for interacting with the bot (e.g.
        /housebot hi)
      format: string
      name: command_handler
      placeholder: housebot
      required: true
- notification/betamax_sms:
    description: send out sms notifications (betamax voip service)
    module_configuration:
    - description: The phone number to be used as the from of the message
      format: string
      name: from
      placeholder: 112341231232
      required: true
    - description: The Betamax hostname of your service
      format: string
      name: hostname
      placeholder: www.frevoipdeal.com
      required: true
    - description: The username of your betamax account
      format: string
      name: username
      placeholder: username
      required: true
    - description: The password of your betamax account
      format: password
      name: password
      placeholder: password
      required: true
    - description: Use SSL
      format: checkbox
      name: ssl
      required: true
    - description: Recipient phone number(s), comma separated
      format: string
      name: to
      placeholder: 112341231232
      required: true
- notification/slack:
    description: Make a phone call through an attached serial device (just a few rings)
    module_configuration:
    - description: The Slack legacy token the chatbot will use to connect to Slack
      format: string
      name: bot_token
      required: true
    - description: The name of the bot as it will show up on Slack
      format: string
      name: bot_name
      placeholder: housebot
      required: true
    - description: The name of the channel the chatbot will send notifications to
      format: string
      name: channel
      placeholder: channel_name
      required: true
- notification/smtp:
    description: Send out email notifications
    module_configuration:
    - description: The email address used as the from of the message
      format: string
      name: from
      placeholder: user@email.com
      required: true
    - description: The SMTP server used to send out the email
      format: string
      name: hostname
      placeholder: smtp.google.com
      required: true
    - description: The port of the SMTP server
      format: string
      name: port
      placeholder: 25
      required: true
    - description: The username for authenticating against the SMTP server
      format: string
      name: username
      placeholder: username
      required: false
    - description: The password for authenticating against the SMTP server
      format: password
      name: password
      placeholder: password
      required: false
    - description: Use TLS
      format: checkbox
      name: tls
      required: true
    - description: Recipient email address(es), comma separated
      format: string
      name: to
      placeholder: user@email.com
      required: true
    - description: Subject of the email
      format: string
      name: subject
      placeholder: House Notification
      required: true
    - description: Template to use for the email's body (with placehoders
      format: text
      name: template
      required: true
- notification/mobile:
    description: forward notifications to a list of configured devices running the
      eGeoffrey mobile app
    module_configuration:
    - description: List of tokens of the mobile devices to be notified, comma separated
        (to get the device token, open the eGeoffrey mobile app and tap on 'About')
      format: string
      name: devices
      placeholder: Asadjaskld109213102312kljlcasldkd123
      required: true
- notification/telegram_messenger:
    description: Send a notification via Telegram to a user or a group
    module_configuration:
    - description: The token of the Telegram bot you have created (https://core.telegram.org/bots#3-how-do-i-create-a-bot)
      format: string
      name: bot_token
      required: true
    - description: The chat_id you want to send the message to (https://t.me/gettingidbot)
      format: string
      name: chat_id
      required: true
- service/command:
    description: Run system commands
    service_configuration:
      actuator:
      - description: Command to run
        format: string
        name: command
        placeholder: reboot
        required: true
      pull:
      - description: Command to run
        format: string
        name: command
        placeholder: uptime
        required: true
- service/csv:
    description: Retrieve values from a csv file
    service_configuration:
      pull:
      - description: Location or URL of the CSV file
        format: string
        name: csv_file
        placeholder: https://www1.ncdc.noaa.gov/pub/data/cdo/samples/NORMAL_DLY_sample_csv.csv
        required: true
      - description: Column number which contains the value to extract
        format: int
        name: value_position
        required: true
      - description: If defined, only the lines of the file with this value at this
          position will be evaluated
        format: string
        name: filter
        required: false
      - description: The column you want to filter in the csv file
        format: int
        name: filter_position
        required: false
      - description: The column of the date (UTC) in the csv file
        format: int
        name: date_position
        required: false
      - description: The format of the date in strftime format
        format: string
        name: date_format
        required: false
      - description: An optional prefix of the value (that will be striped out) used
          as additional filter
        format: string
        name: prefix
        required: false
- service/earthquake:
    description: Retrieve earthquake information
    service_configuration:
      pull:
      - description: The domain hosting the FDSN Web Services
        format: string
        name: domain
        placeholder: earthquake.usgs.gov
        required: true
      - description: A query in the format key1=value1&key=value2
        format: string
        name: query
        placeholder: minmag=7
        required: true
- service/fcc_weather:
    description: Retrieve weather information from Free Code Camp Weather API
    service_configuration:
      pull:
      - description: What to measure
        format: temperature|pressure|humidity|wind|wind_dir|condition|description|visibility|clouds
        name: request
        required: true
      - description: The latitude of the location
        format: float
        name: latitude
        placeholder: 12.33
        required: true
      - description: The longitude of the location
        format: float
        name: longitude
        placeholder: 70.11
        required: true
- service/icloud:
    description: Retrieve position of a device from Apple icloud service
    service_configuration:
      pull:
      - description: The username of the icloud account
        format: string
        name: username
        placeholder: username@email.com
        required: true
      - description: The password of the icloud account
        format: password
        name: password
        required: true
      - description: The name of the device to monitor
        format: string
        name: device_name
        placeholder: my_iPhone
        required: true
- service/mqtt:
    description: Interact with sensors through a mqtt broker
    module_configuration:
    - description: The MQTT hostname to connect to
      format: string
      name: hostname
      placeholder: egeoffrey-gateway
      required: true
    - description: The port of the MQTT broker
      format: int
      name: port
      placeholder: 1883
      required: true
    - description: The username for authenticating against the mqtt broker
      format: string
      name: username
      placeholder: username
      required: false
    - description: The password for authenticating against the mqtt broker
      format: password
      name: password
      placeholder: password
      required: false
    service_configuration:
      actuator:
      - description: The topic to publish to
        format: string
        name: topic
        placeholder: /sensors/out
        required: true
      - description: Send a JSON payload with the value set into the following attribute
        format: string
        name: key
        placeholder: state
        required: false
      - description: Send a custom payload with the placeholder %value% replaced by
          the actual value
        format: string
        name: template
        placeholder: '{"warning": {"duration": 10, "mode": "%value%", "strobe": true}}'
        required: false
      push:
      - description: The topic to subscribe
        format: string
        name: topic
        placeholder: /sensors/in
        required: true
      - description: The key of the JSON payload whose measure has to be extracted
        format: string
        name: key
        placeholder: temperature
        required: false
      - description: Filter in only a subset of data based on conditions provided
          in the format key1=value1&key2=value2 (for JSON input only)
        format: string
        name: filter
        placeholder: action=rotate_right
        required: false
- service/openweathermap:
    description: Retrieve weather information from OpenWeatherMap
    module_configuration:
    - description: Your OpenWeatherMap API key
      format: string
      name: api_key
      required: true
    service_configuration:
      pull:
      - description: What to measure
        format: temperature|pressure|humidity|wind|wind_dir|condition|description|visibility|rain_1h|rain_3h|snow_1h|snow_3h|clouds|uv|forecast_temperature|forecast_pressure|forecast_humidity|forecast_wind|forecast_wind_dir|forecast_condition|forecast_description|forecast_visibility|forecast_rain_3h|forecast_snow_3h|forecast_clouds
        name: request
        required: true
      - description: The latitude of the location
        format: float
        name: latitude
        placeholder: 12.33
        required: true
      - description: The longitude of the location
        format: float
        name: longitude
        placeholder: 70.11
        required: true
- service/rss:
    description: Parse a RSS feed
    service_configuration:
      pull:
      - description: The url of the RSS feed
        format: string
        name: url
        placeholder: http://rss.cnn.com/rss/cnn_latest.rss
        required: true
- service/weatherchannel:
    description: Retrieve weather information from weatherchannel
    module_configuration:
    - description: Your WeatherChannel API key
      format: string
      name: api_key
      required: true
    service_configuration:
      pull:
      - description: What to request
        format: alerts
        name: request
        required: true
      - description: The latitude of the location
        format: float
        name: latitude
        placeholder: 12.33
        required: true
      - description: The longitude of the location
        format: float
        name: longitude
        placeholder: 70.11
        required: true
package: egeoffrey-collection-core
revision: 6
sdk_branch: development
tags: collection core
version: 1.1
